[{"D:\\projets\\react\\poketest-lunajets\\src\\index.js":"1","D:\\projets\\react\\poketest-lunajets\\src\\App.js":"2","D:\\projets\\react\\poketest-lunajets\\src\\reportWebVitals.js":"3","D:\\projets\\react\\poketest-lunajets\\src\\components\\Header.js":"4","D:\\projets\\react\\poketest-lunajets\\src\\components\\Pane.js":"5","D:\\projets\\react\\poketest-lunajets\\src\\graphql\\getPokemons.js":"6","D:\\projets\\react\\poketest-lunajets\\src\\components\\Browse.js":"7","D:\\projets\\react\\poketest-lunajets\\src\\components\\Search.js":"8","D:\\projets\\react\\poketest-lunajets\\src\\components\\Battle.js":"9","D:\\projets\\react\\poketest-lunajets\\src\\context\\context.js":"10","D:\\projets\\react\\poketest-lunajets\\src\\hooks\\usePokemons.js":"11","D:\\projets\\react\\poketest-lunajets\\src\\context\\index.js":"12","D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerAttacks.js":"13","D:\\projets\\react\\poketest-lunajets\\src\\components\\ComputerBox.js":"14","D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerBox.js":"15","D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerStandByPoke.js":"16","D:\\projets\\react\\poketest-lunajets\\src\\components\\ComputerStandByPoke.js":"17","D:\\projets\\react\\poketest-lunajets\\src\\components\\ReStart.js":"18","D:\\projets\\react\\poketest-lunajets\\src\\components\\MsgGame.js":"19","D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerImgPoke.js":"20","D:\\projets\\react\\poketest-lunajets\\src\\components\\ComputerImgPoke.js":"21","D:\\projets\\react\\pokePostulation\\src\\index.js":"22","D:\\projets\\react\\pokePostulation\\src\\App.js":"23","D:\\projets\\react\\pokePostulation\\src\\reportWebVitals.js":"24","D:\\projets\\react\\pokePostulation\\src\\components\\Header.js":"25","D:\\projets\\react\\pokePostulation\\src\\components\\Browse.js":"26","D:\\projets\\react\\pokePostulation\\src\\context\\context.js":"27","D:\\projets\\react\\pokePostulation\\src\\hooks\\usePokemons.js":"28","D:\\projets\\react\\pokePostulation\\src\\components\\Battle.js":"29","D:\\projets\\react\\pokePostulation\\src\\components\\ComputerBox.js":"30","D:\\projets\\react\\pokePostulation\\src\\components\\Search.js":"31","D:\\projets\\react\\pokePostulation\\src\\components\\PlayerBox.js":"32","D:\\projets\\react\\pokePostulation\\src\\components\\Pane.js":"33","D:\\projets\\react\\pokePostulation\\src\\components\\ReStart.js":"34","D:\\projets\\react\\pokePostulation\\src\\components\\PlayerAttacks.js":"35","D:\\projets\\react\\pokePostulation\\src\\context\\index.js":"36","D:\\projets\\react\\pokePostulation\\src\\components\\MsgGame.js":"37","D:\\projets\\react\\pokePostulation\\src\\graphql\\getPokemons.js":"38","D:\\projets\\react\\pokePostulation\\src\\components\\PlayerImgPoke.js":"39","D:\\projets\\react\\pokePostulation\\src\\components\\ComputerStandByPoke.js":"40","D:\\projets\\react\\pokePostulation\\src\\components\\ComputerImgPoke.js":"41","D:\\projets\\react\\pokePostulation\\src\\components\\PlayerStandByPoke.js":"42","D:\\projets\\react\\pokePostulation\\src\\components\\TopModal.js":"43","D:\\projets\\react\\pokePostulation\\src\\components\\WiningDev.js":"44"},{"size":697,"mtime":1609616141121,"results":"45","hashOfConfig":"46"},{"size":1869,"mtime":1610533623884,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":1925,"mtime":1616748691300,"results":"49","hashOfConfig":"46"},{"size":4163,"mtime":1610612140560,"results":"50","hashOfConfig":"46"},{"size":1962,"mtime":1616748310208,"results":"51","hashOfConfig":"46"},{"size":3348,"mtime":1616748795179,"results":"52","hashOfConfig":"46"},{"size":1973,"mtime":1616748560366,"results":"53","hashOfConfig":"46"},{"size":11359,"mtime":1616748963001,"results":"54","hashOfConfig":"46"},{"size":118,"mtime":1609421027734,"results":"55","hashOfConfig":"46"},{"size":3787,"mtime":1616748231203,"results":"56","hashOfConfig":"46"},{"size":69,"mtime":1609423270444,"results":"57","hashOfConfig":"46"},{"size":332,"mtime":1609660434446,"results":"58","hashOfConfig":"46"},{"size":1903,"mtime":1609668730514,"results":"59","hashOfConfig":"46"},{"size":1916,"mtime":1610531922348,"results":"60","hashOfConfig":"46"},{"size":2790,"mtime":1616748606235,"results":"61","hashOfConfig":"46"},{"size":2810,"mtime":1616748754336,"results":"62","hashOfConfig":"46"},{"size":238,"mtime":1609600730178,"results":"63","hashOfConfig":"46"},{"size":310,"mtime":1609660385074,"results":"64","hashOfConfig":"46"},{"size":875,"mtime":1609669251412,"results":"65","hashOfConfig":"46"},{"size":883,"mtime":1609669253087,"results":"66","hashOfConfig":"46"},{"size":697,"mtime":1609616141121,"results":"67","hashOfConfig":"68"},{"size":1530,"mtime":1620755150178,"results":"69","hashOfConfig":"68"},{"size":362,"mtime":499162500000,"results":"70","hashOfConfig":"68"},{"size":1925,"mtime":1616748691300,"results":"71","hashOfConfig":"68"},{"size":3299,"mtime":1620735573216,"results":"72","hashOfConfig":"68"},{"size":118,"mtime":1609421027734,"results":"73","hashOfConfig":"68"},{"size":4152,"mtime":1620759738551,"results":"74","hashOfConfig":"68"},{"size":11539,"mtime":1620759905909,"results":"75","hashOfConfig":"68"},{"size":1682,"mtime":1620737916613,"results":"76","hashOfConfig":"68"},{"size":1973,"mtime":1616748560366,"results":"77","hashOfConfig":"68"},{"size":1916,"mtime":1620738861324,"results":"78","hashOfConfig":"68"},{"size":4163,"mtime":1610612140560,"results":"79","hashOfConfig":"68"},{"size":238,"mtime":1609600730178,"results":"80","hashOfConfig":"68"},{"size":332,"mtime":1609660434446,"results":"81","hashOfConfig":"68"},{"size":69,"mtime":1609423270444,"results":"82","hashOfConfig":"68"},{"size":310,"mtime":1609660385074,"results":"83","hashOfConfig":"68"},{"size":1962,"mtime":1616748310208,"results":"84","hashOfConfig":"68"},{"size":875,"mtime":1609669251412,"results":"85","hashOfConfig":"68"},{"size":2810,"mtime":1616748754336,"results":"86","hashOfConfig":"68"},{"size":932,"mtime":1620754314369,"results":"87","hashOfConfig":"68"},{"size":2790,"mtime":1616748606235,"results":"88","hashOfConfig":"68"},{"size":2019,"mtime":1620747865097,"results":"89","hashOfConfig":"68"},{"size":3520,"mtime":1620759359963,"results":"90","hashOfConfig":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"f28sij",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"1kpmz7b",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"139"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projets\\react\\poketest-lunajets\\src\\index.js",[],["185","186"],"D:\\projets\\react\\poketest-lunajets\\src\\App.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\reportWebVitals.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\Header.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\Pane.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\graphql\\getPokemons.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\Browse.js",["187","188"],"import React, { useContext } from 'react'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport SlidingPane from 'react-sliding-pane'\r\nimport 'react-sliding-pane/dist/react-sliding-pane.css'\r\n\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport Pane from './Pane'\r\nimport Search from './Search'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../sass/App.scss'\r\nimport '../sass/loader.scss'\r\nimport '../sass/Search.scss'\r\n\r\nimport { PokemonContext } from '../context/'\r\n\r\nfunction Browse () {\r\n  const {\r\n    data,\r\n    loading,\r\n    error,\r\n    allPokeFound,\r\n    state,\r\n    setState,\r\n    selectedPoke,\r\n    setSelectedPoke,\r\n    multiSelectedPoke,\r\n    setMultiSelectedPoke,\r\n    handleClick,\r\n    handleDblClick,\r\n    handleSearch\r\n  } = useContext(PokemonContext)\r\n\r\n  if (loading) return <div className='preloader'><div className='pokeball-spinner' /> </div>\r\n  if (error) return `Error! ${error.message}`\r\n\r\n  return (\r\n    <div className='App'>\r\n      <ToastContainer />\r\n\r\n      {/* Searching area */}\r\n      <Search\r\n        data={data || ''}\r\n        allPokeFound={allPokeFound || ''}\r\n        handleSearch={handleSearch || ''}\r\n      />\r\n\r\n      {/* Pokemons list */}\r\n\r\n      <div id='lstpokeContainer' className='container lstpoke mt-2'>\r\n        {data &&\r\n          data.pokemons &&\r\n          data.pokemons\r\n            .map((pokemon, index) => (\r\n\r\n              <div id={pokemon.name} key={pokemon.id}>\r\n                <div\r\n                  id={pokemon.name}\r\n                  className={`card poke-card ${multiSelectedPoke.includes(pokemon) ? 'pokeactive' : ''}`}\r\n                  role='button'\r\n                  onDoubleClick={() => handleDblClick(pokemon)}\r\n                  onClick={() => handleClick(pokemon, this)}\r\n                >\r\n                  <Image\r\n                    className='poke-item align-middle '\r\n                    src={pokemon.image}\r\n                    alt={pokemon.name}\r\n                    fluid\r\n                  />\r\n                </div>\r\n                <div className='card-body poke-name'>\r\n                  <span>{pokemon.name}</span>\r\n                </div>\r\n              </div>\r\n\r\n            ))}\r\n\r\n        {/* Pokemons panel details */}\r\n        {selectedPoke.length !== 0\r\n          ? <SlidingPane\r\n              closeIcon={<FontAwesomeIcon icon={faWindowClose} size='2x' className='closeico' />}\r\n              isOpen={state.isPaneOpen}\r\n              title={selectedPoke.name}\r\n              subtitle={selectedPoke.types.map((type, index) => (\r\n                <h6 className='d-inline' key={type} role='button'>\r\n                  <span class={`badge badge-light type-${type}`}>{type}</span>\r\n                </h6>\r\n              )).reduce((prev, curr) => [prev, ' - ', curr])}\r\n              onRequestClose={() => {\r\n                setState({ isPaneOpen: false })\r\n              }}\r\n            >\r\n\r\n            {/* Pokemons details */}\r\n            <Pane\r\n              pokemon={selectedPoke}\r\n              handleDblClick={handleDblClick}\r\n            />\r\n\r\n            </SlidingPane>\r\n\r\n          : ''}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Browse\r\n","D:\\projets\\react\\poketest-lunajets\\src\\components\\Search.js",["189"],"import React, { useState, useEffect } from 'react'\r\nimport '../sass/Search.scss'\r\nimport Fuse from 'fuse.js'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Search = ({ data, allPokeFound, handleSearch }) => {\r\n  const [searchFilter, setSearchFilter] = useState('')\r\n  const [dataPoke, setDataPoke] = useState(data)\r\n\r\n  useEffect(() => {\r\n    setDataPoke(dataPoke => [data][0].pokemons)\r\n  }, [])\r\n\r\n  const handleKeyUp = event => {\r\n    if (event.key === 'Enter') {\r\n      search(event)\r\n    }\r\n  }\r\n\r\n  const search = (e) => {\r\n    const options = {\r\n      minMatchCharLength: 3,\r\n      keys: [\r\n        'name',\r\n        'classification',\r\n        'types'\r\n      ]\r\n    }\r\n    const fuse = new Fuse(dataPoke, options)\r\n    // Resultat de recherche\r\n    const result = fuse.search(searchFilter)\r\n    handleSearch(result, searchFilter)\r\n  }\r\n\r\n  const resetSearch = () => {\r\n    setSearchFilter('')\r\n    search('')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='input-group mb-3 fixpos'>\r\n      <input\r\n        id='inpFilter'\r\n        type='text'\r\n        className='inpSearch flex-fill'\r\n        placeholder='Search pokemon, classification or type'\r\n        value={searchFilter}\r\n        onChange={e => setSearchFilter(e.target.value)}\r\n        onKeyUp={e => handleKeyUp(e)}\r\n      />\r\n      <div className='input-group-append'>\r\n        <button\r\n          className='inpSearch btn-search'\r\n          type='button'\r\n          onClick={() => search(searchFilter)}\r\n        >\r\n          <FontAwesomeIcon icon={faSearch} size='2x' className='align-middle mr-2' />\r\n        </button>\r\n        <button\r\n          className='inpSearch'\r\n          type='button'\r\n          onClick={() => resetSearch()}\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} size='2x' className='align-middle mr-2' />\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Search\r\n","D:\\projets\\react\\poketest-lunajets\\src\\components\\Battle.js",["190","191","192"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport '../sass/Battle.scss'\r\nimport { PokemonContext } from '../context/'\r\n\r\nimport ComputerBox from './ComputerBox'\r\nimport PlayerBox from './PlayerBox'\r\nimport PlayerAttacks from './PlayerAttacks'\r\nimport ReStart from './ReStart'\r\nimport MsgGame from './MsgGame'\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst Battle = () => {\r\n  const {\r\n    multiSelectedPoke,\r\n    computerSelectedPoke,\r\n    setMultiSelectedPoke,\r\n    setComputerSelectedPoke\r\n  } = useContext(PokemonContext)\r\n\r\n  const [pokePlayer, setPokePlayer] = useState([])\r\n  const [pokeComputer, setPokeComputer] = useState([])\r\n\r\n  const [pokePlayerHpNow, setPokePlayerHpNow] = useState('')\r\n  const [pokeComputerHpNow, setPokeComputerHpNow] = useState('')\r\n\r\n  const [computerAttack, setComputerAttack] = useState('')\r\n\r\n  const [msgGame, setMsgGame] = useState('')\r\n\r\n  const [computerState, setComputerState] = useState('start')\r\n  const [playerState, setPlayerState] = useState('start')\r\n\r\n  const [gameOver, setGameOver] = useState(false)\r\n\r\n  const [isStart, setIsStart] = useState(true)\r\n\r\n  const [prevPlayerTeam, setPrevPlayerTeam] = useState([])\r\n  const [prevComputerTeam, setPrevComputerTeam] = useState([])\r\n\r\n  let nowHpPlayer = ''\r\n  let nowHpComputer = ''\r\n\r\n  // Set Pokemon for player\r\n  useEffect(() => {\r\n    const pickPokePlayer = multiSelectedPoke.shift()\r\n    setPokePlayer(...pokePlayer, pickPokePlayer)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setPokePlayerHpNow(pokePlayerHpNow => pokePlayer.maxHP)\r\n  }, [pokePlayer.maxHP])\r\n\r\n  // Set Pokemon for computer\r\n  useEffect(() => {\r\n    const pickPokeComputer = computerSelectedPoke.shift()\r\n    setPokeComputer(pokeComputer => pickPokeComputer)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setPokeComputerHpNow(pokeComputerHpNow => pokeComputer.maxHP)\r\n  }, [pokeComputer.maxHP])\r\n\r\n  // Start management\r\n  useEffect(() => {\r\n    if (typeof pokeComputer.name !== 'undefined') {\r\n      pickComputerAttack()\r\n    }\r\n\r\n    // ready for battle\r\n    if (isStart && typeof pokeComputer.name !== 'undefined') {\r\n      start()\r\n    }\r\n  }, [pokeComputer])\r\n\r\n  const start = () => {\r\n    setIsStart(false)\r\n    setTimeout(() => {\r\n      setMsgGame(msgGame => `Computer defy you with ${pokeComputer.name} !`)\r\n      setTimeout(() => {\r\n        setMsgGame(msgGame => `Go ${pokePlayer.name}!`)\r\n        setTimeout(() => {\r\n          setMsgGame(msgGame => '')\r\n        }, 2000)\r\n      }, 3000)\r\n    }, 1)\r\n  }\r\n\r\n  const handlePlayerAttack = (name, damage) => {\r\n    const pokeDefWeakness = pokePlayer.weaknesses\r\n    const pokeDefResistant = pokePlayer.resistant\r\n    const pokeAttTypes = pokeComputer.types\r\n\r\n    // HANDLE ANIMATE\r\n    setPlayerState(playerState => 'attack')\r\n    setTimeout(() => {\r\n      setComputerState(setComputerState => 'damage')\r\n    }, 500)\r\n    // END ANIMATE\r\n\r\n    // TODO Random esquive 1/5\r\n    // TODO Extract damage calcul\r\n    // TODO Make HOC for handlePlayerAttack and handleComputerAttack\r\n\r\n    // set initial damage\r\n    damage = (damage * 2) + Math.floor(Math.random() * 50)\r\n    // search for weakness\r\n    if (pokeDefWeakness.some(Weakness => pokeAttTypes.includes(Weakness))) { damage *= 2 }\r\n    // search for resistance\r\n    if (pokeDefResistant.some(Resistant => pokeAttTypes.includes(Resistant))) { damage /= 2 }\r\n    // set new damage\r\n    damage = Math.floor(damage)\r\n\r\n    nowHpComputer = ((pokeComputerHpNow - damage) < 0 ? 0 : (pokeComputerHpNow - damage))\r\n\r\n    setPokeComputerHpNow(pokeComputerHpNow => nowHpComputer)\r\n\r\n    setMsgGame(msgGame => `${pokePlayer.name} used ${name} <br> and make ${damage} damage !`)\r\n    setTimeout(() => {\r\n      if (nowHpComputer === 0 && computerSelectedPoke.length === 0) {\r\n        setMsgGame(msgGame => `${pokeComputer.name} fainted ! <br> Your ${pokePlayer.name} wins !`)\r\n        setComputerState(setComputerState => 'loose')\r\n        setTimeout(() => {\r\n          setGameOver(gameOver => true)\r\n        }, 2000)\r\n      } else if (nowHpComputer === 0 && computerSelectedPoke.length > 0) {\r\n        setComputerState(setComputerState => 'loose')\r\n        // Launch next pokemon\r\n        nextPokeComputer()\r\n      } else {\r\n        setMsgGame(msgGame => '')\r\n\r\n        // Computer turn to fight\r\n        handleComputerAttack()\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  const pickComputerAttack = () => {\r\n    // pick random attack type\r\n    const attackType = Math.floor(Math.random() * 2)\r\n    // pick random attack from type\r\n    if (attackType === 0) {\r\n      const attackIndex = Math.floor(Math.random() * pokeComputer.attacks.fast.length)\r\n      setComputerAttack(computerAttack => pokeComputer.attacks.fast[attackIndex])\r\n    } else {\r\n      const attackIndex = Math.floor(Math.random() * pokeComputer.attacks.special.length)\r\n      setComputerAttack(computerAttack => pokeComputer.attacks.special[attackIndex])\r\n    }\r\n  }\r\n\r\n  const handleComputerAttack = () => {\r\n    const pokeDefWeakness = pokePlayer.weaknesses\r\n    const pokeDefResistant = pokePlayer.resistant\r\n    const pokeAttTypes = pokeComputer.types\r\n\r\n    // HANDLE ANIMATE\r\n    setComputerState(computerState => 'attack')\r\n    setTimeout(() => {\r\n      setPlayerState(playerState => 'damage')\r\n    }, 500)\r\n    // END ANIMATE\r\n\r\n    pickComputerAttack()\r\n    // TODO Random esquive\r\n    // TODO Extract damage calcul\r\n\r\n    // set initial damage\r\n    let { name, damage } = computerAttack\r\n    damage = (damage * 2) + Math.floor(Math.random() * 50)\r\n    // search for weakness\r\n    if (pokeDefWeakness.some(Weakness => pokeAttTypes.includes(Weakness))) { damage *= 2 }\r\n    // search for resistance\r\n    if (pokeDefResistant.some(Resistant => pokeAttTypes.includes(Resistant))) { damage /= 2 }\r\n    // set new damage\r\n    damage = Math.floor(damage)\r\n\r\n    // Set new hp level for player\r\n    nowHpPlayer = ((pokePlayerHpNow - damage) < 0 ? 0 : (pokePlayerHpNow - damage))\r\n    setPokePlayerHpNow(pokePlayerHpNow => nowHpPlayer)\r\n\r\n    setMsgGame(msgGame => `${pokeComputer.name} used ${name} <br> and make ${damage} damage !`)\r\n\r\n    setTimeout(() => {\r\n      if (nowHpPlayer === 0 && multiSelectedPoke.length === 0) {\r\n        // Current poke loose and no more stand by\r\n        setMsgGame(msgGame => `Your ${pokePlayer.name} fainted ! <br> You loose !`)\r\n        setPlayerState(playerState => 'loose')\r\n        setTimeout(() => {\r\n          setGameOver(gameOver => true)\r\n        }, 2000)\r\n      } if (nowHpPlayer === 0 && multiSelectedPoke.length > 0) {\r\n        // Current poke loose but more stand by\r\n        setPlayerState(setPlayerState => 'loose')\r\n        // Launch next pokemon\r\n        nextPokePlayer()\r\n      } else {\r\n        setMsgGame(msgGame => '')\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  const nextPokeComputer = () => {\r\n    setMsgGame(msgGame => `${pokeComputer.name} fainted !`)\r\n    setTimeout(() => {\r\n      setComputerState(setComputerState => 'start')\r\n      const pickPokeComputer = computerSelectedPoke.shift()\r\n      setPrevComputerTeam([...prevComputerTeam, pickPokeComputer])\r\n      setPokeComputer(pokeComputer => pickPokeComputer)\r\n      setMsgGame(msgGame => `Computer call ${pickPokeComputer.name} !`)\r\n      setTimeout(() => {\r\n        setMsgGame(msgGame => '')\r\n      }, 2000)\r\n    }, 2000)\r\n  }\r\n\r\n  const nextPokePlayer = () => {\r\n    setMsgGame(msgGame => `Your ${pokePlayer.name} fainted !`)\r\n    setTimeout(() => {\r\n      setPlayerState(setPlayerState => 'start')\r\n      const pickPokePlayer = multiSelectedPoke.shift()\r\n      setPrevPlayerTeam([...prevPlayerTeam, pickPokePlayer])\r\n      setPokePlayer(pokePlayer => pickPokePlayer)\r\n      setMsgGame(msgGame => `Go ${pickPokePlayer.name} !`)\r\n      setTimeout(() => {\r\n        setMsgGame(msgGame => '')\r\n      }, 2000)\r\n    }, 2000)\r\n  }\r\n\r\n  const handleReStart = () => {\r\n    setMultiSelectedPoke([...prevPlayerTeam, ...multiSelectedPoke])\r\n    setComputerSelectedPoke([...prevComputerTeam, ...computerSelectedPoke])\r\n    setPokeComputerHpNow(pokeComputerHpNow => pokeComputer.maxHP)\r\n    setPokePlayerHpNow(pokePlayerHpNow => pokePlayer.maxHP)\r\n    setComputerState(computerSate => 'start')\r\n    setPlayerState(playerState => 'start')\r\n    setGameOver(gameOver => false)\r\n    setMsgGame(msgGame => '')\r\n    setIsStart(true)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='container vh100'>\r\n      <div className='row row vh100 justify-content-center align-items-center'>\r\n        <div className='col-sm-12'>\r\n          {/* BATTLE SCREEN CONTAINER */}\r\n          <div className='card px-2 mx-auto battleField'>\r\n\r\n            <ComputerBox\r\n              pokeComputer={pokeComputer}\r\n              computerSelectedPoke={computerSelectedPoke}\r\n              pokeComputerHpNow={pokeComputerHpNow}\r\n              computerState={computerState}\r\n            />\r\n\r\n            <PlayerBox\r\n              pokePlayer={pokePlayer}\r\n              multiSelectedPoke={multiSelectedPoke}\r\n              pokePlayerHpNow={pokePlayerHpNow}\r\n              playerState={playerState}\r\n            />\r\n\r\n            {/* TEXT BOX BOTTOM */}\r\n            <div className='card box-bottom'>\r\n\r\n              <div className='card-body d-flex justify-content-between m-0 p-1'>\r\n\r\n                {gameOver === false && msgGame !== '' && (\r\n                  <MsgGame\r\n                    msgGame={msgGame}\r\n                  />\r\n                )}\r\n\r\n                {msgGame === '' && gameOver === false && typeof pokeComputer.name !== 'undefined' && (\r\n                  <>\r\n\r\n                    <ListGroup className='lstAttacks'>\r\n                      {pokePlayer.attacks && pokePlayer.attacks.fast\r\n                        .slice(0, 2)\r\n                        .map((attack, index) => (\r\n                          <ListGroup.Item key={attack.name} role='button' className='item-attack-fast' action>\r\n                            <PlayerAttacks\r\n                              name={attack.name}\r\n                              damage={attack.damage}\r\n                              type={attack.type}\r\n                              handlePlayerAttack={handlePlayerAttack}\r\n                            />\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n\r\n                    <ListGroup className='lstAttacks'>\r\n                      {pokePlayer.attacks && pokePlayer.attacks.special\r\n                        .slice(0, 2)\r\n                        .map((attack, index) => (\r\n                          <ListGroup.Item key={attack.name} role='button' className='item-attack-spe' action>\r\n                            <PlayerAttacks\r\n                              name={attack.name}\r\n                              damage={attack.damage}\r\n                              type={attack.type}\r\n                              handlePlayerAttack={handlePlayerAttack}\r\n                            />\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n\r\n                  </>\r\n                )}\r\n\r\n                {gameOver === true && (\r\n                  <ReStart handleReStart={handleReStart} />\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n            {/* END TEXT BOX BOTTOM */}\r\n          </div>\r\n          {/* END BATTLE SCREEN CONTAINER */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Battle\r\n","D:\\projets\\react\\poketest-lunajets\\src\\context\\context.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\hooks\\usePokemons.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\context\\index.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerAttacks.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\ComputerBox.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerBox.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerStandByPoke.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\ComputerStandByPoke.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\ReStart.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\MsgGame.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\PlayerImgPoke.js",[],"D:\\projets\\react\\poketest-lunajets\\src\\components\\ComputerImgPoke.js",[],"D:\\projets\\react\\pokePostulation\\src\\index.js",[],["193","194"],"D:\\projets\\react\\pokePostulation\\src\\App.js",[],"D:\\projets\\react\\pokePostulation\\src\\reportWebVitals.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\Header.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\Browse.js",[],"D:\\projets\\react\\pokePostulation\\src\\context\\context.js",[],"D:\\projets\\react\\pokePostulation\\src\\hooks\\usePokemons.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\Battle.js",["195","196","197","198"],"D:\\projets\\react\\pokePostulation\\src\\components\\ComputerBox.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\Search.js",["199"],"D:\\projets\\react\\pokePostulation\\src\\components\\PlayerBox.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\Pane.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\ReStart.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\PlayerAttacks.js",[],"D:\\projets\\react\\pokePostulation\\src\\context\\index.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\MsgGame.js",[],"D:\\projets\\react\\pokePostulation\\src\\graphql\\getPokemons.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\PlayerImgPoke.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\ComputerStandByPoke.js",[],["200","201"],"D:\\projets\\react\\pokePostulation\\src\\components\\ComputerImgPoke.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\PlayerStandByPoke.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\TopModal.js",[],"D:\\projets\\react\\pokePostulation\\src\\components\\WiningDev.js",["202"],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":33,"column":5,"nodeType":"209","messageId":"210","endLine":33,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":35,"column":5,"nodeType":"209","messageId":"210","endLine":35,"endColumn":25},{"ruleId":"212","severity":1,"message":"213","line":14,"column":6,"nodeType":"214","endLine":14,"endColumn":8,"suggestions":"215"},{"ruleId":"212","severity":1,"message":"216","line":48,"column":6,"nodeType":"214","endLine":48,"endColumn":8,"suggestions":"217"},{"ruleId":"212","severity":1,"message":"218","line":58,"column":6,"nodeType":"214","endLine":58,"endColumn":8,"suggestions":"219"},{"ruleId":"212","severity":1,"message":"220","line":74,"column":6,"nodeType":"214","endLine":74,"endColumn":20,"suggestions":"221"},{"ruleId":"203","replacedBy":"222"},{"ruleId":"205","replacedBy":"223"},{"ruleId":"212","severity":1,"message":"216","line":51,"column":6,"nodeType":"214","endLine":51,"endColumn":8,"suggestions":"224"},{"ruleId":"212","severity":1,"message":"218","line":61,"column":6,"nodeType":"214","endLine":61,"endColumn":8,"suggestions":"225"},{"ruleId":"212","severity":1,"message":"220","line":78,"column":6,"nodeType":"214","endLine":78,"endColumn":20,"suggestions":"226"},{"ruleId":"207","severity":1,"message":"227","line":207,"column":9,"nodeType":"209","messageId":"210","endLine":207,"endColumn":25},{"ruleId":"212","severity":1,"message":"213","line":14,"column":6,"nodeType":"214","endLine":14,"endColumn":8,"suggestions":"228"},{"ruleId":"203","replacedBy":"229"},{"ruleId":"205","replacedBy":"230"},{"ruleId":"212","severity":1,"message":"231","line":26,"column":6,"nodeType":"214","endLine":26,"endColumn":8,"suggestions":"232"},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'setSelectedPoke' is assigned a value but never used.","Identifier","unusedVar","'setMultiSelectedPoke' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'setDataPoke' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.","ArrayExpression",["235"],"React Hook useEffect has missing dependencies: 'multiSelectedPoke' and 'pokePlayer'. Either include them or remove the dependency array. You can also do a functional update 'setPokePlayer(p => ...)' if you only need 'pokePlayer' in the 'setPokePlayer' call.",["236"],"React Hook useEffect has a missing dependency: 'computerSelectedPoke'. Either include it or remove the dependency array.",["237"],"React Hook useEffect has missing dependencies: 'isStart', 'pickComputerAttack', and 'start'. Either include them or remove the dependency array.",["238"],["233"],["234"],["239"],["240"],["241"],"'nextPokeComputer' is assigned a value but never used.",["242"],["233"],["234"],"React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.",["243"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"246","fix":"252"},{"desc":"248","fix":"253"},{"desc":"250","fix":"254"},{"desc":"244","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [data]",{"range":"258","text":"259"},"Update the dependencies array to be: [multiSelectedPoke, pokePlayer]",{"range":"260","text":"261"},"Update the dependencies array to be: [computerSelectedPoke]",{"range":"262","text":"263"},"Update the dependencies array to be: [isStart, pickComputerAttack, pokeComputer, start]",{"range":"264","text":"265"},{"range":"266","text":"261"},{"range":"267","text":"263"},{"range":"268","text":"265"},{"range":"269","text":"259"},"Update the dependencies array to be: [setState]",{"range":"270","text":"271"},[494,496],"[data]",[1478,1480],"[multiSelectedPoke, pokePlayer]",[1766,1768],"[computerSelectedPoke]",[2141,2155],"[isStart, pickComputerAttack, pokeComputer, start]",[1552,1554],[1840,1842],[2254,2268],[494,496],[731,733],"[setState]"]